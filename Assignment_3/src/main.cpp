//============================================================================//
//
//	File Name	: assignment3.cpp
//	Create Date	: 03.11.2018
//	Designers	: Nebi Deniz Uras
//	Number 	    : 504181527
//	Description	: Data Structures Homework 3
//
//	Important Notes:
//
//============================================================================//
#define _CRT_SECURE_NO_WARNINGS
//============================================================================//
//=============================== INCLUDES ===================================//
//============================================================================//
#include <iostream>

//============================================================================//
//==========================  MACRO DEFINITIONS ==============================//
//============================================================================//
#define FILE_NAME_LENGTH	(256)

//============================================================================//
//=========================== TYPE DEFINITIONS ===============================//
//============================================================================//

//============================================================================//
//========================== FUNCTION PROTOTYPES =============================//
//============================================================================//

//============================================================================//
//============================ GLOBAL VARIABLES ==============================//
//============================================================================//

//============================================================================//
//============================ PUBLIC FUNCTIONS ==============================//
//============================================================================//

int main(int argc, char *argv[])
{
	char fileName[FILE_NAME_LENGTH] = { 0 };

	if (argc != 2)
	{
		std::cout << "ERROR : Invalid Argument\n";
#if _WIN32
		system("Pause");
#endif		
		return -1;
	}

	// get name of files that will be read
	memcpy(fileName, argv[1], strlen(argv[1]));


#if _WIN32
	system("Pause");
#endif	
	return 0;
}

//============================================================================//
//============================ PRIVATE FUNCTIONS =============================//
//============================================================================//

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
