//============================================================================//
//
//	File Name	: assignment3.cpp
//	Create Date	: 03.11.2018
//	Designers	: Nebi Deniz Uras
//	Number 	    : 504181527
//	Description	: Data Structures Homework 3
//
//	Important Notes:
//
//============================================================================//
#define _CRT_SECURE_NO_WARNINGS
//============================================================================//
//=============================== INCLUDES ===================================//
//============================================================================//
#include <iostream>

//============================================================================//
//==========================  MACRO DEFINITIONS ==============================//
//============================================================================//
#define FILE_NAME_LENGTH	(256)

//============================================================================//
//=========================== TYPE DEFINITIONS ===============================//
//============================================================================//
struct Node {
	int data;
	Node *next;
};

struct Deck{
	Node *head;
	void create();
	void close();
	void push(int val);
	int  pop();
	bool isempty();
};

//============================================================================//
//========================== FUNCTION PROTOTYPES =============================//
//============================================================================//

//============================================================================//
//============================ GLOBAL VARIABLES ==============================//
//============================================================================//

//============================================================================//
//============================ PUBLIC FUNCTIONS ==============================//
//============================================================================//

int main(int argc, char *argv[])
{
	char fileName[FILE_NAME_LENGTH] = { 0 };
	int playerDeckCount = 0; // second value of first line
	int tableDeckCount = 0;	// first value of first line
	Deck tableDeck;
	Deck binDeck;
	Deck firstPlayerDeck;
	Deck secondPlayerDeck;

	if (argc != 2)
	{
		std::cout << "ERROR : Invalid Argument\n" << std::endl;
#if _WIN32
		system("Pause");
#endif		
		return -1;
	}

	// get name of files that will be read
	memcpy(fileName, argv[1], strlen(argv[1]));


#if _WIN32
	system("Pause");
#endif	
	return 0;
}

//============================================================================//
//============================ PRIVATE FUNCTIONS =============================//
//============================================================================//

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void Deck::create()
{
	head = NULL;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void Deck::close()
{
	Node *p;
	
	while (head) 
	{
		p = head;
		head = head->next;
		delete p;
	}
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void Deck::push(int val)
{
	Node *newNode = new Node;

	newNode->data = val;
	newNode->next = head;
	head = newNode;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
int Deck::pop()
{
	Node *topNode;
	int temp;

	topNode = head;
	head = head->next;
	temp = topNode->data;

	delete topNode;

	return temp;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool Deck::isempty()
{
	return head == NULL;
}
